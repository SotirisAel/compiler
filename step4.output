State 10 conflicts: 1 reduce/reduce
State 38 conflicts: 9 reduce/reduce
State 52 conflicts: 1 reduce/reduce
State 111 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration
    3                 | declaration declaration_list

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID ';'
    7                | type_specifier ID '[' NUM ']' ';'
    8                | error ';'

    9 type_specifier: INT
   10               | VOID
   11               | error ';'

   12 $@1: %empty

   13 $@2: %empty

   14 fun_declaration: type_specifier ID '(' $@1 params $@2 ')' compound_stmt

   15 params: VOID
   16       | param_list

   17 param_list: param
   18           | param ',' param_list

   19 param: type_specifier ID
   20      | type_specifier ID '[' ']'
   21      | error ')'

   22 compound_stmt: '{' local_declarations stmt_list '}'

   23 local_declarations: var_declaration
   24                   | var_declaration local_declarations
   25                   | %empty

   26 stmt_list: statement
   27          | statement stmt_list
   28          | %empty

   29 statement: expression_stmt
   30          | compound_stmt
   31          | selection_stmt
   32          | iteration_stmt
   33          | assign_stmt
   34          | return_stmt

   35 expression_stmt: expression ';'
   36                | ';'

   37 $@3: %empty

   38 selection_stmt: IF '(' expression ')' $@3 red_selection_stmt

   39 red_selection_stmt: statement
   40                   | statement ELSE statement

   41 $@4: %empty

   42 $@5: %empty

   43 iteration_stmt: WHILE $@4 '(' expression ')' $@5 statement

   44 return_stmt: RETURN ';'
   45            | RETURN expression ';'

   46 expression: simple_expression

   47 assign_stmt: var '=' expression_stmt

   48 var: ID
   49    | ID '[' expression ']'

   50 simple_expression: additive_expression
   51                  | simple_expression relop additive_expression

   52 relop: SOE
   53      | '<'
   54      | '>'
   55      | GOE
   56      | EQV
   57      | NEV

   58 additive_expression: term
   59                    | additive_expression addop term

   60 addop: '+'
   61      | '-'

   62 term: factor
   63     | term mulop factor

   64 mulop: '*'
   65      | '/'
   66      | '%'

   67 factor: '(' expression ')'
   68       | NUM
   69       | var
   70       | call

   71 call: ID '(' args ')'

   72 args: arg_list
   73     | %empty

   74 arg_list: expression
   75         | expression ',' arg_list


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 66
    '(' (40) 14 38 43 67 71
    ')' (41) 14 21 38 43 67 71
    '*' (42) 64
    '+' (43) 60
    ',' (44) 18 75
    '-' (45) 61
    '/' (47) 65
    ';' (59) 6 7 8 11 35 36 44 45
    '<' (60) 53
    '=' (61) 47
    '>' (62) 54
    '[' (91) 7 20 49
    ']' (93) 7 20 49
    '{' (123) 22
    '}' (125) 22
    error (256) 8 11 21
    NUM <num> (258) 7 68
    ID <str> (259) 6 7 14 19 20 48 49 71
    IF (260) 38
    WHILE (261) 43
    ELSE (262) 40
    INT (263) 9
    RETURN (264) 44 45
    VOID (265) 10 15
    SOE (266) 52
    GOE (267) 55
    EQV (268) 56
    NEV (269) 57


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program <num> (32)
        on left: 1
        on right: 0
    declaration_list <num> (33)
        on left: 2 3
        on right: 1 3
    declaration <num> (34)
        on left: 4 5
        on right: 2 3
    var_declaration <num> (35)
        on left: 6 7 8
        on right: 4 23 24
    type_specifier <num> (36)
        on left: 9 10 11
        on right: 6 7 14 19 20
    fun_declaration <num> (37)
        on left: 14
        on right: 5
    $@1 (38)
        on left: 12
        on right: 14
    $@2 (39)
        on left: 13
        on right: 14
    params (40)
        on left: 15 16
        on right: 14
    param_list (41)
        on left: 17 18
        on right: 16 18
    param (42)
        on left: 19 20 21
        on right: 17 18
    compound_stmt <num> (43)
        on left: 22
        on right: 14 30
    local_declarations <num> (44)
        on left: 23 24 25
        on right: 22 24
    stmt_list <num> (45)
        on left: 26 27 28
        on right: 22 27
    statement <num> (46)
        on left: 29 30 31 32 33 34
        on right: 26 27 39 40 43
    expression_stmt <num> (47)
        on left: 35 36
        on right: 29 47
    selection_stmt <num> (48)
        on left: 38
        on right: 31
    $@3 (49)
        on left: 37
        on right: 38
    red_selection_stmt <num> (50)
        on left: 39 40
        on right: 38
    iteration_stmt <num> (51)
        on left: 43
        on right: 32
    $@4 (52)
        on left: 41
        on right: 43
    $@5 (53)
        on left: 42
        on right: 43
    return_stmt <num> (54)
        on left: 44 45
        on right: 34
    expression <num> (55)
        on left: 46
        on right: 35 38 43 45 49 67 74 75
    assign_stmt <num> (56)
        on left: 47
        on right: 33
    var <str> (57)
        on left: 48 49
        on right: 47 69
    simple_expression <num> (58)
        on left: 50 51
        on right: 46 51
    relop <str> (59)
        on left: 52 53 54 55 56 57
        on right: 51
    additive_expression <num> (60)
        on left: 58 59
        on right: 50 51 59
    addop <str> (61)
        on left: 60 61
        on right: 59
    term <num> (62)
        on left: 62 63
        on right: 58 59 63
    mulop <str> (63)
        on left: 64 65 66
        on right: 63
    factor <num> (64)
        on left: 67 68 69 70
        on right: 62 63
    call <num> (65)
        on left: 71
        on right: 70
    args (66)
        on left: 72 73
        on right: 71
    arg_list (67)
        on left: 74 75
        on right: 72 75


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    program           go to state 4
    declaration_list  go to state 5
    declaration       go to state 6
    var_declaration   go to state 7
    type_specifier    go to state 8
    fun_declaration   go to state 9


State 1

    8 var_declaration: error . ';'
   11 type_specifier: error . ';'

    ';'  shift, and go to state 10


State 2

    9 type_specifier: INT .

    $default  reduce using rule 9 (type_specifier)


State 3

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 11


State 5

    1 program: declaration_list .

    $default  reduce using rule 1 (program)


State 6

    2 declaration_list: declaration .
    3                 | declaration . declaration_list

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    $end  reduce using rule 2 (declaration_list)

    declaration_list  go to state 12
    declaration       go to state 6
    var_declaration   go to state 7
    type_specifier    go to state 8
    fun_declaration   go to state 9


State 7

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 8

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'
   14 fun_declaration: type_specifier . ID '(' $@1 params $@2 ')' compound_stmt

    ID  shift, and go to state 13


State 9

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 10

    8 var_declaration: error ';' .
   11 type_specifier: error ';' .

    ID        reduce using rule 8 (var_declaration)
    ID        [reduce using rule 11 (type_specifier)]
    $default  reduce using rule 8 (var_declaration)


State 11

    0 $accept: program $end .

    $default  accept


State 12

    3 declaration_list: declaration declaration_list .

    $default  reduce using rule 3 (declaration_list)


State 13

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'
   14 fun_declaration: type_specifier ID . '(' $@1 params $@2 ')' compound_stmt

    ';'  shift, and go to state 14
    '['  shift, and go to state 15
    '('  shift, and go to state 16


State 14

    6 var_declaration: type_specifier ID ';' .

    $default  reduce using rule 6 (var_declaration)


State 15

    7 var_declaration: type_specifier ID '[' . NUM ']' ';'

    NUM  shift, and go to state 17


State 16

   14 fun_declaration: type_specifier ID '(' . $@1 params $@2 ')' compound_stmt

    $default  reduce using rule 12 ($@1)

    $@1  go to state 18


State 17

    7 var_declaration: type_specifier ID '[' NUM . ']' ';'

    ']'  shift, and go to state 19


State 18

   14 fun_declaration: type_specifier ID '(' $@1 . params $@2 ')' compound_stmt

    error  shift, and go to state 20
    INT    shift, and go to state 2
    VOID   shift, and go to state 21

    type_specifier  go to state 22
    params          go to state 23
    param_list      go to state 24
    param           go to state 25


State 19

    7 var_declaration: type_specifier ID '[' NUM ']' . ';'

    ';'  shift, and go to state 26


State 20

   11 type_specifier: error . ';'
   21 param: error . ')'

    ';'  shift, and go to state 27
    ')'  shift, and go to state 28


State 21

   10 type_specifier: VOID .
   15 params: VOID .

    ')'       reduce using rule 15 (params)
    $default  reduce using rule 10 (type_specifier)


State 22

   19 param: type_specifier . ID
   20      | type_specifier . ID '[' ']'

    ID  shift, and go to state 29


State 23

   14 fun_declaration: type_specifier ID '(' $@1 params . $@2 ')' compound_stmt

    $default  reduce using rule 13 ($@2)

    $@2  go to state 30


State 24

   16 params: param_list .

    $default  reduce using rule 16 (params)


State 25

   17 param_list: param .
   18           | param . ',' param_list

    ','  shift, and go to state 31

    $default  reduce using rule 17 (param_list)


State 26

    7 var_declaration: type_specifier ID '[' NUM ']' ';' .

    $default  reduce using rule 7 (var_declaration)


State 27

   11 type_specifier: error ';' .

    $default  reduce using rule 11 (type_specifier)


State 28

   21 param: error ')' .

    $default  reduce using rule 21 (param)


State 29

   19 param: type_specifier ID .
   20      | type_specifier ID . '[' ']'

    '['  shift, and go to state 32

    $default  reduce using rule 19 (param)


State 30

   14 fun_declaration: type_specifier ID '(' $@1 params $@2 . ')' compound_stmt

    ')'  shift, and go to state 33


State 31

   18 param_list: param ',' . param_list

    error  shift, and go to state 20
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 22
    param_list      go to state 34
    param           go to state 25


State 32

   20 param: type_specifier ID '[' . ']'

    ']'  shift, and go to state 35


State 33

   14 fun_declaration: type_specifier ID '(' $@1 params $@2 ')' . compound_stmt

    '{'  shift, and go to state 36

    compound_stmt  go to state 37


State 34

   18 param_list: param ',' param_list .

    $default  reduce using rule 18 (param_list)


State 35

   20 param: type_specifier ID '[' ']' .

    $default  reduce using rule 20 (param)


State 36

   22 compound_stmt: '{' . local_declarations stmt_list '}'

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    NUM     reduce using rule 25 (local_declarations)
    ID      reduce using rule 25 (local_declarations)
    IF      reduce using rule 25 (local_declarations)
    WHILE   reduce using rule 25 (local_declarations)
    RETURN  reduce using rule 25 (local_declarations)
    ';'     reduce using rule 25 (local_declarations)
    '('     reduce using rule 25 (local_declarations)
    '{'     reduce using rule 25 (local_declarations)
    '}'     reduce using rule 25 (local_declarations)

    var_declaration     go to state 38
    type_specifier      go to state 39
    local_declarations  go to state 40


State 37

   14 fun_declaration: type_specifier ID '(' $@1 params $@2 ')' compound_stmt .

    $default  reduce using rule 14 (fun_declaration)


State 38

   23 local_declarations: var_declaration .
   24                   | var_declaration . local_declarations

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    NUM     reduce using rule 23 (local_declarations)
    NUM     [reduce using rule 25 (local_declarations)]
    ID      reduce using rule 23 (local_declarations)
    ID      [reduce using rule 25 (local_declarations)]
    IF      reduce using rule 23 (local_declarations)
    IF      [reduce using rule 25 (local_declarations)]
    WHILE   reduce using rule 23 (local_declarations)
    WHILE   [reduce using rule 25 (local_declarations)]
    RETURN  reduce using rule 23 (local_declarations)
    RETURN  [reduce using rule 25 (local_declarations)]
    ';'     reduce using rule 23 (local_declarations)
    ';'     [reduce using rule 25 (local_declarations)]
    '('     reduce using rule 23 (local_declarations)
    '('     [reduce using rule 25 (local_declarations)]
    '{'     reduce using rule 23 (local_declarations)
    '{'     [reduce using rule 25 (local_declarations)]
    '}'     reduce using rule 23 (local_declarations)
    '}'     [reduce using rule 25 (local_declarations)]

    var_declaration     go to state 38
    type_specifier      go to state 39
    local_declarations  go to state 41


State 39

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'

    ID  shift, and go to state 42


State 40

   22 compound_stmt: '{' local_declarations . stmt_list '}'

    NUM     shift, and go to state 43
    ID      shift, and go to state 44
    IF      shift, and go to state 45
    WHILE   shift, and go to state 46
    RETURN  shift, and go to state 47
    ';'     shift, and go to state 48
    '('     shift, and go to state 49
    '{'     shift, and go to state 36

    $default  reduce using rule 28 (stmt_list)

    compound_stmt        go to state 50
    stmt_list            go to state 51
    statement            go to state 52
    expression_stmt      go to state 53
    selection_stmt       go to state 54
    iteration_stmt       go to state 55
    return_stmt          go to state 56
    expression           go to state 57
    assign_stmt          go to state 58
    var                  go to state 59
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 41

   24 local_declarations: var_declaration local_declarations .

    $default  reduce using rule 24 (local_declarations)


State 42

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'

    ';'  shift, and go to state 14
    '['  shift, and go to state 15


State 43

   68 factor: NUM .

    $default  reduce using rule 68 (factor)


State 44

   48 var: ID .
   49    | ID . '[' expression ']'
   71 call: ID . '(' args ')'

    '['  shift, and go to state 65
    '('  shift, and go to state 66

    $default  reduce using rule 48 (var)


State 45

   38 selection_stmt: IF . '(' expression ')' $@3 red_selection_stmt

    '('  shift, and go to state 67


State 46

   43 iteration_stmt: WHILE . $@4 '(' expression ')' $@5 statement

    $default  reduce using rule 41 ($@4)

    $@4  go to state 68


State 47

   44 return_stmt: RETURN . ';'
   45            | RETURN . expression ';'

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    ';'  shift, and go to state 69
    '('  shift, and go to state 49

    expression           go to state 70
    var                  go to state 71
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 48

   36 expression_stmt: ';' .

    $default  reduce using rule 36 (expression_stmt)


State 49

   67 factor: '(' . expression ')'

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    expression           go to state 72
    var                  go to state 71
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 50

   30 statement: compound_stmt .

    $default  reduce using rule 30 (statement)


State 51

   22 compound_stmt: '{' local_declarations stmt_list . '}'

    '}'  shift, and go to state 73


State 52

   26 stmt_list: statement .
   27          | statement . stmt_list

    NUM     shift, and go to state 43
    ID      shift, and go to state 44
    IF      shift, and go to state 45
    WHILE   shift, and go to state 46
    RETURN  shift, and go to state 47
    ';'     shift, and go to state 48
    '('     shift, and go to state 49
    '{'     shift, and go to state 36

    '}'       reduce using rule 26 (stmt_list)
    '}'       [reduce using rule 28 (stmt_list)]
    $default  reduce using rule 26 (stmt_list)

    compound_stmt        go to state 50
    stmt_list            go to state 74
    statement            go to state 52
    expression_stmt      go to state 53
    selection_stmt       go to state 54
    iteration_stmt       go to state 55
    return_stmt          go to state 56
    expression           go to state 57
    assign_stmt          go to state 58
    var                  go to state 59
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 53

   29 statement: expression_stmt .

    $default  reduce using rule 29 (statement)


State 54

   31 statement: selection_stmt .

    $default  reduce using rule 31 (statement)


State 55

   32 statement: iteration_stmt .

    $default  reduce using rule 32 (statement)


State 56

   34 statement: return_stmt .

    $default  reduce using rule 34 (statement)


State 57

   35 expression_stmt: expression . ';'

    ';'  shift, and go to state 75


State 58

   33 statement: assign_stmt .

    $default  reduce using rule 33 (statement)


State 59

   47 assign_stmt: var . '=' expression_stmt
   69 factor: var .

    '='  shift, and go to state 76

    $default  reduce using rule 69 (factor)


State 60

   46 expression: simple_expression .
   51 simple_expression: simple_expression . relop additive_expression

    SOE  shift, and go to state 77
    GOE  shift, and go to state 78
    EQV  shift, and go to state 79
    NEV  shift, and go to state 80
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82

    $default  reduce using rule 46 (expression)

    relop  go to state 83


State 61

   50 simple_expression: additive_expression .
   59 additive_expression: additive_expression . addop term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 50 (simple_expression)

    addop  go to state 86


State 62

   58 additive_expression: term .
   63 term: term . mulop factor

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 58 (additive_expression)

    mulop  go to state 90


State 63

   62 term: factor .

    $default  reduce using rule 62 (term)


State 64

   70 factor: call .

    $default  reduce using rule 70 (factor)


State 65

   49 var: ID '[' . expression ']'

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    expression           go to state 91
    var                  go to state 71
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 66

   71 call: ID '(' . args ')'

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    $default  reduce using rule 73 (args)

    expression           go to state 92
    var                  go to state 71
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64
    args                 go to state 93
    arg_list             go to state 94


State 67

   38 selection_stmt: IF '(' . expression ')' $@3 red_selection_stmt

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    expression           go to state 95
    var                  go to state 71
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 68

   43 iteration_stmt: WHILE $@4 . '(' expression ')' $@5 statement

    '('  shift, and go to state 96


State 69

   44 return_stmt: RETURN ';' .

    $default  reduce using rule 44 (return_stmt)


State 70

   45 return_stmt: RETURN expression . ';'

    ';'  shift, and go to state 97


State 71

   69 factor: var .

    $default  reduce using rule 69 (factor)


State 72

   67 factor: '(' expression . ')'

    ')'  shift, and go to state 98


State 73

   22 compound_stmt: '{' local_declarations stmt_list '}' .

    $default  reduce using rule 22 (compound_stmt)


State 74

   27 stmt_list: statement stmt_list .

    $default  reduce using rule 27 (stmt_list)


State 75

   35 expression_stmt: expression ';' .

    $default  reduce using rule 35 (expression_stmt)


State 76

   47 assign_stmt: var '=' . expression_stmt

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    ';'  shift, and go to state 48
    '('  shift, and go to state 49

    expression_stmt      go to state 99
    expression           go to state 57
    var                  go to state 71
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 77

   52 relop: SOE .

    $default  reduce using rule 52 (relop)


State 78

   55 relop: GOE .

    $default  reduce using rule 55 (relop)


State 79

   56 relop: EQV .

    $default  reduce using rule 56 (relop)


State 80

   57 relop: NEV .

    $default  reduce using rule 57 (relop)


State 81

   53 relop: '<' .

    $default  reduce using rule 53 (relop)


State 82

   54 relop: '>' .

    $default  reduce using rule 54 (relop)


State 83

   51 simple_expression: simple_expression relop . additive_expression

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    var                  go to state 71
    additive_expression  go to state 100
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 84

   60 addop: '+' .

    $default  reduce using rule 60 (addop)


State 85

   61 addop: '-' .

    $default  reduce using rule 61 (addop)


State 86

   59 additive_expression: additive_expression addop . term

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    var     go to state 71
    term    go to state 101
    factor  go to state 63
    call    go to state 64


State 87

   64 mulop: '*' .

    $default  reduce using rule 64 (mulop)


State 88

   65 mulop: '/' .

    $default  reduce using rule 65 (mulop)


State 89

   66 mulop: '%' .

    $default  reduce using rule 66 (mulop)


State 90

   63 term: term mulop . factor

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    var     go to state 71
    factor  go to state 102
    call    go to state 64


State 91

   49 var: ID '[' expression . ']'

    ']'  shift, and go to state 103


State 92

   74 arg_list: expression .
   75         | expression . ',' arg_list

    ','  shift, and go to state 104

    $default  reduce using rule 74 (arg_list)


State 93

   71 call: ID '(' args . ')'

    ')'  shift, and go to state 105


State 94

   72 args: arg_list .

    $default  reduce using rule 72 (args)


State 95

   38 selection_stmt: IF '(' expression . ')' $@3 red_selection_stmt

    ')'  shift, and go to state 106


State 96

   43 iteration_stmt: WHILE $@4 '(' . expression ')' $@5 statement

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    expression           go to state 107
    var                  go to state 71
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 97

   45 return_stmt: RETURN expression ';' .

    $default  reduce using rule 45 (return_stmt)


State 98

   67 factor: '(' expression ')' .

    $default  reduce using rule 67 (factor)


State 99

   47 assign_stmt: var '=' expression_stmt .

    $default  reduce using rule 47 (assign_stmt)


State 100

   51 simple_expression: simple_expression relop additive_expression .
   59 additive_expression: additive_expression . addop term

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 51 (simple_expression)

    addop  go to state 86


State 101

   59 additive_expression: additive_expression addop term .
   63 term: term . mulop factor

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 59 (additive_expression)

    mulop  go to state 90


State 102

   63 term: term mulop factor .

    $default  reduce using rule 63 (term)


State 103

   49 var: ID '[' expression ']' .

    $default  reduce using rule 49 (var)


State 104

   75 arg_list: expression ',' . arg_list

    NUM  shift, and go to state 43
    ID   shift, and go to state 44
    '('  shift, and go to state 49

    expression           go to state 92
    var                  go to state 71
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64
    arg_list             go to state 108


State 105

   71 call: ID '(' args ')' .

    $default  reduce using rule 71 (call)


State 106

   38 selection_stmt: IF '(' expression ')' . $@3 red_selection_stmt

    $default  reduce using rule 37 ($@3)

    $@3  go to state 109


State 107

   43 iteration_stmt: WHILE $@4 '(' expression . ')' $@5 statement

    ')'  shift, and go to state 110


State 108

   75 arg_list: expression ',' arg_list .

    $default  reduce using rule 75 (arg_list)


State 109

   38 selection_stmt: IF '(' expression ')' $@3 . red_selection_stmt

    NUM     shift, and go to state 43
    ID      shift, and go to state 44
    IF      shift, and go to state 45
    WHILE   shift, and go to state 46
    RETURN  shift, and go to state 47
    ';'     shift, and go to state 48
    '('     shift, and go to state 49
    '{'     shift, and go to state 36

    compound_stmt        go to state 50
    statement            go to state 111
    expression_stmt      go to state 53
    selection_stmt       go to state 54
    red_selection_stmt   go to state 112
    iteration_stmt       go to state 55
    return_stmt          go to state 56
    expression           go to state 57
    assign_stmt          go to state 58
    var                  go to state 59
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 110

   43 iteration_stmt: WHILE $@4 '(' expression ')' . $@5 statement

    $default  reduce using rule 42 ($@5)

    $@5  go to state 113


State 111

   39 red_selection_stmt: statement .
   40                   | statement . ELSE statement

    ELSE  shift, and go to state 114

    ELSE      [reduce using rule 39 (red_selection_stmt)]
    $default  reduce using rule 39 (red_selection_stmt)


State 112

   38 selection_stmt: IF '(' expression ')' $@3 red_selection_stmt .

    $default  reduce using rule 38 (selection_stmt)


State 113

   43 iteration_stmt: WHILE $@4 '(' expression ')' $@5 . statement

    NUM     shift, and go to state 43
    ID      shift, and go to state 44
    IF      shift, and go to state 45
    WHILE   shift, and go to state 46
    RETURN  shift, and go to state 47
    ';'     shift, and go to state 48
    '('     shift, and go to state 49
    '{'     shift, and go to state 36

    compound_stmt        go to state 50
    statement            go to state 115
    expression_stmt      go to state 53
    selection_stmt       go to state 54
    iteration_stmt       go to state 55
    return_stmt          go to state 56
    expression           go to state 57
    assign_stmt          go to state 58
    var                  go to state 59
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 114

   40 red_selection_stmt: statement ELSE . statement

    NUM     shift, and go to state 43
    ID      shift, and go to state 44
    IF      shift, and go to state 45
    WHILE   shift, and go to state 46
    RETURN  shift, and go to state 47
    ';'     shift, and go to state 48
    '('     shift, and go to state 49
    '{'     shift, and go to state 36

    compound_stmt        go to state 50
    statement            go to state 116
    expression_stmt      go to state 53
    selection_stmt       go to state 54
    iteration_stmt       go to state 55
    return_stmt          go to state 56
    expression           go to state 57
    assign_stmt          go to state 58
    var                  go to state 59
    simple_expression    go to state 60
    additive_expression  go to state 61
    term                 go to state 62
    factor               go to state 63
    call                 go to state 64


State 115

   43 iteration_stmt: WHILE $@4 '(' expression ')' $@5 statement .

    $default  reduce using rule 43 (iteration_stmt)


State 116

   40 red_selection_stmt: statement ELSE statement .

    $default  reduce using rule 40 (red_selection_stmt)
