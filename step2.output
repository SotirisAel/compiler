State 28 conflicts: 2 shift/reduce
State 46 conflicts: 1 reduce/reduce
State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration
    3                 | declaration_list declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID ';'
    7                | type_specifier ID '[' NUM ']' ';'

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier ID fun1

   11 fun1: '(' params ')' compound_stmt

   12 params: param_list
   13       | VOID
   14       | /* empty */

   15 param_list: param
   16           | param_list ',' param

   17 param: type_specifier ID
   18      | type_specifier ID '[' ']'

   19 compound_stmt: '{' local_declarations statement_list '}'

   20 local_declarations: local_declarations var_declaration
   21                   | var_declaration
   22                   | /* empty */

   23 statement_list: statement
   24               | statement statement_list
   25               | /* empty */

   26 statement: expression_stmt
   27          | compound_stmt
   28          | selection_stmt
   29          | iteration_stmt
   30          | return_stmt

   31 expression_stmt: expression ';'
   32                | ';'

   33 selection_stmt: IF '(' expression ')' statement
   34               | IF '(' expression ')' statement ELSE statement

   35 iteration_stmt: WHILE '(' expression ')' statement

   36 return_stmt: RETURN ';'
   37            | RETURN expression ';'

   38 expression: var '=' expression
   39           | simple_expression

   40 var: ID
   41    | ID '[' expression ']'

   42 simple_expression: additive_expression
   43                  | additive_expression relop additive_expression

   44 relop: '<'
   45      | SOE
   46      | '>'
   47      | GOE
   48      | EQV
   49      | NEV

   50 additive_expression: term
   51                    | additive_expression addop term

   52 addop: '+'
   53      | '-'

   54 term: factor
   55     | term mulop factor

   56 mulop: '*'
   57      | '/'

   58 factor: '(' expression ')'
   59       | var
   60       | call
   61       | NUM

   62 call: ID '(' args ')'

   63 args: arg_list
   64     | /* empty */

   65 arg_list: expression
   66         | arg_list ',' expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 33 34 35 58 62
')' (41) 11 33 34 35 58 62
'*' (42) 56
'+' (43) 52
',' (44) 16 66
'-' (45) 53
'/' (47) 57
';' (59) 6 7 31 32 36 37
'<' (60) 44
'=' (61) 38
'>' (62) 46
'[' (91) 7 18 41
']' (93) 7 18 41
'{' (123) 19
'}' (125) 19
error (256)
NUM (258) 7 61
ID (259) 6 7 10 17 18 40 41 62
IF (260) 33 34
WHILE (261) 35
ELSE (262) 34
INT (263) 8
RETURN (264) 36 37
VOID (265) 9 13
SOE (266) 45
GOE (267) 47
EQV (268) 48
NEV (269) 49


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
declaration_list (32)
    on left: 2 3, on right: 1 3
declaration (33)
    on left: 4 5, on right: 2 3
var_declaration (34)
    on left: 6 7, on right: 4 20 21
type_specifier (35)
    on left: 8 9, on right: 6 7 10 17 18
fun_declaration (36)
    on left: 10, on right: 5
fun1 (37)
    on left: 11, on right: 10
params (38)
    on left: 12 13 14, on right: 11
param_list (39)
    on left: 15 16, on right: 12 16
param (40)
    on left: 17 18, on right: 15 16
compound_stmt (41)
    on left: 19, on right: 11 27
local_declarations (42)
    on left: 20 21 22, on right: 19 20
statement_list (43)
    on left: 23 24 25, on right: 19 24
statement (44)
    on left: 26 27 28 29 30, on right: 23 24 33 34 35
expression_stmt (45)
    on left: 31 32, on right: 26
selection_stmt (46)
    on left: 33 34, on right: 28
iteration_stmt (47)
    on left: 35, on right: 29
return_stmt (48)
    on left: 36 37, on right: 30
expression (49)
    on left: 38 39, on right: 31 33 34 35 37 38 41 58 65 66
var (50)
    on left: 40 41, on right: 38 59
simple_expression (51)
    on left: 42 43, on right: 39
relop (52)
    on left: 44 45 46 47 48 49, on right: 43
additive_expression (53)
    on left: 50 51, on right: 42 43 51
addop (54)
    on left: 52 53, on right: 51
term (55)
    on left: 54 55, on right: 50 51 55
mulop (56)
    on left: 56 57, on right: 55
factor (57)
    on left: 58 59 60 61, on right: 54 55
call (58)
    on left: 62, on right: 60
args (59)
    on left: 63 64, on right: 62
arg_list (60)
    on left: 65 66, on right: 63 66


state 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


state 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


state 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: declaration_list .
    3 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


state 5

    2 declaration_list: declaration .

    $default  reduce using rule 2 (declaration_list)


state 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


state 7

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'
   10 fun_declaration: type_specifier . ID fun1

    ID  shift, and go to state 11


state 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    3 declaration_list: declaration_list declaration .

    $default  reduce using rule 3 (declaration_list)


state 11

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'
   10 fun_declaration: type_specifier ID . fun1

    ';'  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 14

    fun1  go to state 15


state 12

    6 var_declaration: type_specifier ID ';' .

    $default  reduce using rule 6 (var_declaration)


state 13

    7 var_declaration: type_specifier ID '[' . NUM ']' ';'

    NUM  shift, and go to state 16


state 14

   11 fun1: '(' . params ')' compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 17

    $default  reduce using rule 14 (params)

    type_specifier  go to state 18
    params          go to state 19
    param_list      go to state 20
    param           go to state 21


state 15

   10 fun_declaration: type_specifier ID fun1 .

    $default  reduce using rule 10 (fun_declaration)


state 16

    7 var_declaration: type_specifier ID '[' NUM . ']' ';'

    ']'  shift, and go to state 22


state 17

    9 type_specifier: VOID .
   13 params: VOID .

    ')'       reduce using rule 13 (params)
    $default  reduce using rule 9 (type_specifier)


state 18

   17 param: type_specifier . ID
   18      | type_specifier . ID '[' ']'

    ID  shift, and go to state 23


state 19

   11 fun1: '(' params . ')' compound_stmt

    ')'  shift, and go to state 24


state 20

   12 params: param_list .
   16 param_list: param_list . ',' param

    ','  shift, and go to state 25

    $default  reduce using rule 12 (params)


state 21

   15 param_list: param .

    $default  reduce using rule 15 (param_list)


state 22

    7 var_declaration: type_specifier ID '[' NUM ']' . ';'

    ';'  shift, and go to state 26


state 23

   17 param: type_specifier ID .
   18      | type_specifier ID . '[' ']'

    '['  shift, and go to state 27

    $default  reduce using rule 17 (param)


state 24

   11 fun1: '(' params ')' . compound_stmt

    '{'  shift, and go to state 28

    compound_stmt  go to state 29


state 25

   16 param_list: param_list ',' . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 18
    param           go to state 30


state 26

    7 var_declaration: type_specifier ID '[' NUM ']' ';' .

    $default  reduce using rule 7 (var_declaration)


state 27

   18 param: type_specifier ID '[' . ']'

    ']'  shift, and go to state 31


state 28

   19 compound_stmt: '{' . local_declarations statement_list '}'

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    INT       [reduce using rule 22 (local_declarations)]
    VOID      [reduce using rule 22 (local_declarations)]
    $default  reduce using rule 22 (local_declarations)

    var_declaration     go to state 32
    type_specifier      go to state 33
    local_declarations  go to state 34


state 29

   11 fun1: '(' params ')' compound_stmt .

    $default  reduce using rule 11 (fun1)


state 30

   16 param_list: param_list ',' param .

    $default  reduce using rule 16 (param_list)


state 31

   18 param: type_specifier ID '[' ']' .

    $default  reduce using rule 18 (param)


state 32

   21 local_declarations: var_declaration .

    $default  reduce using rule 21 (local_declarations)


state 33

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'

    ID  shift, and go to state 35


state 34

   19 compound_stmt: '{' local_declarations . statement_list '}'
   20 local_declarations: local_declarations . var_declaration

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    INT     shift, and go to state 1
    RETURN  shift, and go to state 40
    VOID    shift, and go to state 2
    ';'     shift, and go to state 41
    '('     shift, and go to state 42
    '{'     shift, and go to state 28

    $default  reduce using rule 25 (statement_list)

    var_declaration      go to state 43
    type_specifier       go to state 33
    compound_stmt        go to state 44
    statement_list       go to state 45
    statement            go to state 46
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 35

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'

    ';'  shift, and go to state 12
    '['  shift, and go to state 13


state 36

   61 factor: NUM .

    $default  reduce using rule 61 (factor)


state 37

   40 var: ID .
   41    | ID . '[' expression ']'
   62 call: ID . '(' args ')'

    '['  shift, and go to state 58
    '('  shift, and go to state 59

    $default  reduce using rule 40 (var)


state 38

   33 selection_stmt: IF . '(' expression ')' statement
   34               | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 60


state 39

   35 iteration_stmt: WHILE . '(' expression ')' statement

    '('  shift, and go to state 61


state 40

   36 return_stmt: RETURN . ';'
   37            | RETURN . expression ';'

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    ';'  shift, and go to state 62
    '('  shift, and go to state 42

    expression           go to state 63
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 41

   32 expression_stmt: ';' .

    $default  reduce using rule 32 (expression_stmt)


state 42

   58 factor: '(' . expression ')'

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 64
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 43

   20 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 20 (local_declarations)


state 44

   27 statement: compound_stmt .

    $default  reduce using rule 27 (statement)


state 45

   19 compound_stmt: '{' local_declarations statement_list . '}'

    '}'  shift, and go to state 65


state 46

   23 statement_list: statement .
   24               | statement . statement_list

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '('     shift, and go to state 42
    '{'     shift, and go to state 28

    '}'       reduce using rule 23 (statement_list)
    '}'       [reduce using rule 25 (statement_list)]
    $default  reduce using rule 23 (statement_list)

    compound_stmt        go to state 44
    statement_list       go to state 66
    statement            go to state 46
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 47

   26 statement: expression_stmt .

    $default  reduce using rule 26 (statement)


state 48

   28 statement: selection_stmt .

    $default  reduce using rule 28 (statement)


state 49

   29 statement: iteration_stmt .

    $default  reduce using rule 29 (statement)


state 50

   30 statement: return_stmt .

    $default  reduce using rule 30 (statement)


state 51

   31 expression_stmt: expression . ';'

    ';'  shift, and go to state 67


state 52

   38 expression: var . '=' expression
   59 factor: var .

    '='  shift, and go to state 68

    $default  reduce using rule 59 (factor)


state 53

   39 expression: simple_expression .

    $default  reduce using rule 39 (expression)


state 54

   42 simple_expression: additive_expression .
   43                  | additive_expression . relop additive_expression
   51 additive_expression: additive_expression . addop term

    SOE  shift, and go to state 69
    GOE  shift, and go to state 70
    EQV  shift, and go to state 71
    NEV  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76

    $default  reduce using rule 42 (simple_expression)

    relop  go to state 77
    addop  go to state 78


state 55

   50 additive_expression: term .
   55 term: term . mulop factor

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 81


state 56

   54 term: factor .

    $default  reduce using rule 54 (term)


state 57

   60 factor: call .

    $default  reduce using rule 60 (factor)


state 58

   41 var: ID '[' . expression ']'

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 82
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 59

   62 call: ID '(' . args ')'

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    $default  reduce using rule 64 (args)

    expression           go to state 83
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    args                 go to state 84
    arg_list             go to state 85


state 60

   33 selection_stmt: IF '(' . expression ')' statement
   34               | IF '(' . expression ')' statement ELSE statement

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 86
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 61

   35 iteration_stmt: WHILE '(' . expression ')' statement

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 87
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 62

   36 return_stmt: RETURN ';' .

    $default  reduce using rule 36 (return_stmt)


state 63

   37 return_stmt: RETURN expression . ';'

    ';'  shift, and go to state 88


state 64

   58 factor: '(' expression . ')'

    ')'  shift, and go to state 89


state 65

   19 compound_stmt: '{' local_declarations statement_list '}' .

    $default  reduce using rule 19 (compound_stmt)


state 66

   24 statement_list: statement statement_list .

    $default  reduce using rule 24 (statement_list)


state 67

   31 expression_stmt: expression ';' .

    $default  reduce using rule 31 (expression_stmt)


state 68

   38 expression: var '=' . expression

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 90
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 69

   45 relop: SOE .

    $default  reduce using rule 45 (relop)


state 70

   47 relop: GOE .

    $default  reduce using rule 47 (relop)


state 71

   48 relop: EQV .

    $default  reduce using rule 48 (relop)


state 72

   49 relop: NEV .

    $default  reduce using rule 49 (relop)


state 73

   44 relop: '<' .

    $default  reduce using rule 44 (relop)


state 74

   46 relop: '>' .

    $default  reduce using rule 46 (relop)


state 75

   52 addop: '+' .

    $default  reduce using rule 52 (addop)


state 76

   53 addop: '-' .

    $default  reduce using rule 53 (addop)


state 77

   43 simple_expression: additive_expression relop . additive_expression

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    var                  go to state 91
    additive_expression  go to state 92
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 78

   51 additive_expression: additive_expression addop . term

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    var     go to state 91
    term    go to state 93
    factor  go to state 56
    call    go to state 57


state 79

   56 mulop: '*' .

    $default  reduce using rule 56 (mulop)


state 80

   57 mulop: '/' .

    $default  reduce using rule 57 (mulop)


state 81

   55 term: term mulop . factor

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    var     go to state 91
    factor  go to state 94
    call    go to state 57


state 82

   41 var: ID '[' expression . ']'

    ']'  shift, and go to state 95


state 83

   65 arg_list: expression .

    $default  reduce using rule 65 (arg_list)


state 84

   62 call: ID '(' args . ')'

    ')'  shift, and go to state 96


state 85

   63 args: arg_list .
   66 arg_list: arg_list . ',' expression

    ','  shift, and go to state 97

    $default  reduce using rule 63 (args)


state 86

   33 selection_stmt: IF '(' expression . ')' statement
   34               | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 98


state 87

   35 iteration_stmt: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 99


state 88

   37 return_stmt: RETURN expression ';' .

    $default  reduce using rule 37 (return_stmt)


state 89

   58 factor: '(' expression ')' .

    $default  reduce using rule 58 (factor)


state 90

   38 expression: var '=' expression .

    $default  reduce using rule 38 (expression)


state 91

   59 factor: var .

    $default  reduce using rule 59 (factor)


state 92

   43 simple_expression: additive_expression relop additive_expression .
   51 additive_expression: additive_expression . addop term

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76

    $default  reduce using rule 43 (simple_expression)

    addop  go to state 78


state 93

   51 additive_expression: additive_expression addop term .
   55 term: term . mulop factor

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 81


state 94

   55 term: term mulop factor .

    $default  reduce using rule 55 (term)


state 95

   41 var: ID '[' expression ']' .

    $default  reduce using rule 41 (var)


state 96

   62 call: ID '(' args ')' .

    $default  reduce using rule 62 (call)


state 97

   66 arg_list: arg_list ',' . expression

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    '('  shift, and go to state 42

    expression           go to state 100
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 98

   33 selection_stmt: IF '(' expression ')' . statement
   34               | IF '(' expression ')' . statement ELSE statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '('     shift, and go to state 42
    '{'     shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 101
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 99

   35 iteration_stmt: WHILE '(' expression ')' . statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '('     shift, and go to state 42
    '{'     shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 102
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 100

   66 arg_list: arg_list ',' expression .

    $default  reduce using rule 66 (arg_list)


state 101

   33 selection_stmt: IF '(' expression ')' statement .
   34               | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 103

    ELSE      [reduce using rule 33 (selection_stmt)]
    $default  reduce using rule 33 (selection_stmt)


state 102

   35 iteration_stmt: WHILE '(' expression ')' statement .

    $default  reduce using rule 35 (iteration_stmt)


state 103

   34 selection_stmt: IF '(' expression ')' statement ELSE . statement

    NUM     shift, and go to state 36
    ID      shift, and go to state 37
    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ';'     shift, and go to state 41
    '('     shift, and go to state 42
    '{'     shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 104
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


state 104

   34 selection_stmt: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 34 (selection_stmt)
