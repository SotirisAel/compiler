State 28 conflicts: 2 shift/reduce
State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration
    3                 | declaration_list declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID ';'
    7                | type_specifier ID '[' NUM ']' ';'

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier ID fun1

   11 fun1: '(' params ')' compound_stmt

   12 params: param_list
   13       | VOID

   14 param_list: param
   15           | param_list ',' param

   16 param: type_specifier ID
   17      | type_specifier ID '[' ']'

   18 compound_stmt: '{' local_declarations statement_list '}'

   19 local_declarations: var_declaration
   20                   | local_declarations var_declaration
   21                   | /* empty */

   22 statement_list: statement_list statement
   23               | /* empty */

   24 statement: expression_stmt
   25          | compound_stmt
   26          | selection_stmt
   27          | iteration_stmt
   28          | return_stmt

   29 expression_stmt: expression ';'
   30                | ';'

   31 selection_stmt: IF '(' expression ')' statement
   32               | IF '(' expression ')' statement ELSE statement

   33 iteration_stmt: WHILE '(' expression ')' statement

   34 return_stmt: RETURN ';'
   35            | RETURN expression ';'

   36 expression: var '=' expression
   37           | simple_expression

   38 var: ID
   39    | ID '[' expression ']'

   40 simple_expression: additive_expression relop additive_expression
   41                  | additive_expression

   42 relop: '<'
   43      | SOE
   44      | '>'
   45      | GOE
   46      | EQV
   47      | NEV

   48 additive_expression: additive_expression addop term
   49                    | term

   50 addop: '+'
   51      | '-'

   52 term: term mulop factor
   53     | factor

   54 mulop: '*'
   55      | '/'

   56 factor: '(' expression ')'
   57       | var
   58       | call
   59       | NUM

   60 call: ID '(' args ')'

   61 args: arg_list
   62     | /* empty */

   63 arg_list: arg_list ',' expression
   64         | expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 31 32 33 56 60
')' (41) 11 31 32 33 56 60
'*' (42) 54
'+' (43) 50
',' (44) 15 63
'-' (45) 51
'/' (47) 55
';' (59) 6 7 29 30 34 35
'<' (60) 42
'=' (61) 36
'>' (62) 44
'[' (91) 7 17 39
']' (93) 7 17 39
'{' (123) 18
'}' (125) 18
error (256)
NUM (258) 7 59
ID (259) 6 7 10 16 17 38 39 60
IF (260) 31 32
WHILE (261) 33
ELSE (262) 32
INT (263) 8
RETURN (264) 34 35
VOID (265) 9 13
SOE (266) 43
GOE (267) 45
EQV (268) 46
NEV (269) 47


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
declaration_list (32)
    on left: 2 3, on right: 1 3
declaration (33)
    on left: 4 5, on right: 2 3
var_declaration (34)
    on left: 6 7, on right: 4 19 20
type_specifier (35)
    on left: 8 9, on right: 6 7 10 16 17
fun_declaration (36)
    on left: 10, on right: 5
fun1 (37)
    on left: 11, on right: 10
params (38)
    on left: 12 13, on right: 11
param_list (39)
    on left: 14 15, on right: 12 15
param (40)
    on left: 16 17, on right: 14 15
compound_stmt (41)
    on left: 18, on right: 11 25
local_declarations (42)
    on left: 19 20 21, on right: 18 20
statement_list (43)
    on left: 22 23, on right: 18 22
statement (44)
    on left: 24 25 26 27 28, on right: 22 31 32 33
expression_stmt (45)
    on left: 29 30, on right: 24
selection_stmt (46)
    on left: 31 32, on right: 26
iteration_stmt (47)
    on left: 33, on right: 27
return_stmt (48)
    on left: 34 35, on right: 28
expression (49)
    on left: 36 37, on right: 29 31 32 33 35 36 39 56 63 64
var (50)
    on left: 38 39, on right: 36 57
simple_expression (51)
    on left: 40 41, on right: 37
relop (52)
    on left: 42 43 44 45 46 47, on right: 40
additive_expression (53)
    on left: 48 49, on right: 40 41 48
addop (54)
    on left: 50 51, on right: 48
term (55)
    on left: 52 53, on right: 48 49 52
mulop (56)
    on left: 54 55, on right: 52
factor (57)
    on left: 56 57 58 59, on right: 52 53
call (58)
    on left: 60, on right: 58
args (59)
    on left: 61 62, on right: 60
arg_list (60)
    on left: 63 64, on right: 61 63


state 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


state 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


state 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: declaration_list .
    3 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


state 5

    2 declaration_list: declaration .

    $default  reduce using rule 2 (declaration_list)


state 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


state 7

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'
   10 fun_declaration: type_specifier . ID fun1

    ID  shift, and go to state 11


state 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    3 declaration_list: declaration_list declaration .

    $default  reduce using rule 3 (declaration_list)


state 11

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'
   10 fun_declaration: type_specifier ID . fun1

    ';'  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 14

    fun1  go to state 15


state 12

    6 var_declaration: type_specifier ID ';' .

    $default  reduce using rule 6 (var_declaration)


state 13

    7 var_declaration: type_specifier ID '[' . NUM ']' ';'

    NUM  shift, and go to state 16


state 14

   11 fun1: '(' . params ')' compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 17

    type_specifier  go to state 18
    params          go to state 19
    param_list      go to state 20
    param           go to state 21


state 15

   10 fun_declaration: type_specifier ID fun1 .

    $default  reduce using rule 10 (fun_declaration)


state 16

    7 var_declaration: type_specifier ID '[' NUM . ']' ';'

    ']'  shift, and go to state 22


state 17

    9 type_specifier: VOID .
   13 params: VOID .

    ')'       reduce using rule 13 (params)
    $default  reduce using rule 9 (type_specifier)


state 18

   16 param: type_specifier . ID
   17      | type_specifier . ID '[' ']'

    ID  shift, and go to state 23


state 19

   11 fun1: '(' params . ')' compound_stmt

    ')'  shift, and go to state 24


state 20

   12 params: param_list .
   15 param_list: param_list . ',' param

    ','  shift, and go to state 25

    $default  reduce using rule 12 (params)


state 21

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


state 22

    7 var_declaration: type_specifier ID '[' NUM ']' . ';'

    ';'  shift, and go to state 26


state 23

   16 param: type_specifier ID .
   17      | type_specifier ID . '[' ']'

    '['  shift, and go to state 27

    $default  reduce using rule 16 (param)


state 24

   11 fun1: '(' params ')' . compound_stmt

    '{'  shift, and go to state 28

    compound_stmt  go to state 29


state 25

   15 param_list: param_list ',' . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 18
    param           go to state 30


state 26

    7 var_declaration: type_specifier ID '[' NUM ']' ';' .

    $default  reduce using rule 7 (var_declaration)


state 27

   17 param: type_specifier ID '[' . ']'

    ']'  shift, and go to state 31


state 28

   18 compound_stmt: '{' . local_declarations statement_list '}'

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    INT       [reduce using rule 21 (local_declarations)]
    VOID      [reduce using rule 21 (local_declarations)]
    $default  reduce using rule 21 (local_declarations)

    var_declaration     go to state 32
    type_specifier      go to state 33
    local_declarations  go to state 34


state 29

   11 fun1: '(' params ')' compound_stmt .

    $default  reduce using rule 11 (fun1)


state 30

   15 param_list: param_list ',' param .

    $default  reduce using rule 15 (param_list)


state 31

   17 param: type_specifier ID '[' ']' .

    $default  reduce using rule 17 (param)


state 32

   19 local_declarations: var_declaration .

    $default  reduce using rule 19 (local_declarations)


state 33

    6 var_declaration: type_specifier . ID ';'
    7                | type_specifier . ID '[' NUM ']' ';'

    ID  shift, and go to state 35


state 34

   18 compound_stmt: '{' local_declarations . statement_list '}'
   20 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 23 (statement_list)

    var_declaration  go to state 36
    type_specifier   go to state 33
    statement_list   go to state 37


state 35

    6 var_declaration: type_specifier ID . ';'
    7                | type_specifier ID . '[' NUM ']' ';'

    ';'  shift, and go to state 12
    '['  shift, and go to state 13


state 36

   20 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 20 (local_declarations)


state 37

   18 compound_stmt: '{' local_declarations statement_list . '}'
   22 statement_list: statement_list . statement

    NUM     shift, and go to state 38
    ID      shift, and go to state 39
    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    ';'     shift, and go to state 43
    '('     shift, and go to state 44
    '{'     shift, and go to state 28
    '}'     shift, and go to state 45

    compound_stmt        go to state 46
    statement            go to state 47
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 38

   59 factor: NUM .

    $default  reduce using rule 59 (factor)


state 39

   38 var: ID .
   39    | ID . '[' expression ']'
   60 call: ID . '(' args ')'

    '['  shift, and go to state 59
    '('  shift, and go to state 60

    $default  reduce using rule 38 (var)


state 40

   31 selection_stmt: IF . '(' expression ')' statement
   32               | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 61


state 41

   33 iteration_stmt: WHILE . '(' expression ')' statement

    '('  shift, and go to state 62


state 42

   34 return_stmt: RETURN . ';'
   35            | RETURN . expression ';'

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    ';'  shift, and go to state 63
    '('  shift, and go to state 44

    expression           go to state 64
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 43

   30 expression_stmt: ';' .

    $default  reduce using rule 30 (expression_stmt)


state 44

   56 factor: '(' . expression ')'

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    expression           go to state 65
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 45

   18 compound_stmt: '{' local_declarations statement_list '}' .

    $default  reduce using rule 18 (compound_stmt)


state 46

   25 statement: compound_stmt .

    $default  reduce using rule 25 (statement)


state 47

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


state 48

   24 statement: expression_stmt .

    $default  reduce using rule 24 (statement)


state 49

   26 statement: selection_stmt .

    $default  reduce using rule 26 (statement)


state 50

   27 statement: iteration_stmt .

    $default  reduce using rule 27 (statement)


state 51

   28 statement: return_stmt .

    $default  reduce using rule 28 (statement)


state 52

   29 expression_stmt: expression . ';'

    ';'  shift, and go to state 66


state 53

   36 expression: var . '=' expression
   57 factor: var .

    '='  shift, and go to state 67

    $default  reduce using rule 57 (factor)


state 54

   37 expression: simple_expression .

    $default  reduce using rule 37 (expression)


state 55

   40 simple_expression: additive_expression . relop additive_expression
   41                  | additive_expression .
   48 additive_expression: additive_expression . addop term

    SOE  shift, and go to state 68
    GOE  shift, and go to state 69
    EQV  shift, and go to state 70
    NEV  shift, and go to state 71
    '<'  shift, and go to state 72
    '>'  shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75

    $default  reduce using rule 41 (simple_expression)

    relop  go to state 76
    addop  go to state 77


state 56

   49 additive_expression: term .
   52 term: term . mulop factor

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 49 (additive_expression)

    mulop  go to state 80


state 57

   53 term: factor .

    $default  reduce using rule 53 (term)


state 58

   58 factor: call .

    $default  reduce using rule 58 (factor)


state 59

   39 var: ID '[' . expression ']'

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    expression           go to state 81
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 60

   60 call: ID '(' . args ')'

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    $default  reduce using rule 62 (args)

    expression           go to state 82
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58
    args                 go to state 83
    arg_list             go to state 84


state 61

   31 selection_stmt: IF '(' . expression ')' statement
   32               | IF '(' . expression ')' statement ELSE statement

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    expression           go to state 85
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 62

   33 iteration_stmt: WHILE '(' . expression ')' statement

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    expression           go to state 86
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 63

   34 return_stmt: RETURN ';' .

    $default  reduce using rule 34 (return_stmt)


state 64

   35 return_stmt: RETURN expression . ';'

    ';'  shift, and go to state 87


state 65

   56 factor: '(' expression . ')'

    ')'  shift, and go to state 88


state 66

   29 expression_stmt: expression ';' .

    $default  reduce using rule 29 (expression_stmt)


state 67

   36 expression: var '=' . expression

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    expression           go to state 89
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 68

   43 relop: SOE .

    $default  reduce using rule 43 (relop)


state 69

   45 relop: GOE .

    $default  reduce using rule 45 (relop)


state 70

   46 relop: EQV .

    $default  reduce using rule 46 (relop)


state 71

   47 relop: NEV .

    $default  reduce using rule 47 (relop)


state 72

   42 relop: '<' .

    $default  reduce using rule 42 (relop)


state 73

   44 relop: '>' .

    $default  reduce using rule 44 (relop)


state 74

   50 addop: '+' .

    $default  reduce using rule 50 (addop)


state 75

   51 addop: '-' .

    $default  reduce using rule 51 (addop)


state 76

   40 simple_expression: additive_expression relop . additive_expression

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    var                  go to state 90
    additive_expression  go to state 91
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 77

   48 additive_expression: additive_expression addop . term

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    var     go to state 90
    term    go to state 92
    factor  go to state 57
    call    go to state 58


state 78

   54 mulop: '*' .

    $default  reduce using rule 54 (mulop)


state 79

   55 mulop: '/' .

    $default  reduce using rule 55 (mulop)


state 80

   52 term: term mulop . factor

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    var     go to state 90
    factor  go to state 93
    call    go to state 58


state 81

   39 var: ID '[' expression . ']'

    ']'  shift, and go to state 94


state 82

   64 arg_list: expression .

    $default  reduce using rule 64 (arg_list)


state 83

   60 call: ID '(' args . ')'

    ')'  shift, and go to state 95


state 84

   61 args: arg_list .
   63 arg_list: arg_list . ',' expression

    ','  shift, and go to state 96

    $default  reduce using rule 61 (args)


state 85

   31 selection_stmt: IF '(' expression . ')' statement
   32               | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 97


state 86

   33 iteration_stmt: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 98


state 87

   35 return_stmt: RETURN expression ';' .

    $default  reduce using rule 35 (return_stmt)


state 88

   56 factor: '(' expression ')' .

    $default  reduce using rule 56 (factor)


state 89

   36 expression: var '=' expression .

    $default  reduce using rule 36 (expression)


state 90

   57 factor: var .

    $default  reduce using rule 57 (factor)


state 91

   40 simple_expression: additive_expression relop additive_expression .
   48 additive_expression: additive_expression . addop term

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75

    $default  reduce using rule 40 (simple_expression)

    addop  go to state 77


state 92

   48 additive_expression: additive_expression addop term .
   52 term: term . mulop factor

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 48 (additive_expression)

    mulop  go to state 80


state 93

   52 term: term mulop factor .

    $default  reduce using rule 52 (term)


state 94

   39 var: ID '[' expression ']' .

    $default  reduce using rule 39 (var)


state 95

   60 call: ID '(' args ')' .

    $default  reduce using rule 60 (call)


state 96

   63 arg_list: arg_list ',' . expression

    NUM  shift, and go to state 38
    ID   shift, and go to state 39
    '('  shift, and go to state 44

    expression           go to state 99
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 97

   31 selection_stmt: IF '(' expression ')' . statement
   32               | IF '(' expression ')' . statement ELSE statement

    NUM     shift, and go to state 38
    ID      shift, and go to state 39
    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    ';'     shift, and go to state 43
    '('     shift, and go to state 44
    '{'     shift, and go to state 28

    compound_stmt        go to state 46
    statement            go to state 100
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 98

   33 iteration_stmt: WHILE '(' expression ')' . statement

    NUM     shift, and go to state 38
    ID      shift, and go to state 39
    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    ';'     shift, and go to state 43
    '('     shift, and go to state 44
    '{'     shift, and go to state 28

    compound_stmt        go to state 46
    statement            go to state 101
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 99

   63 arg_list: arg_list ',' expression .

    $default  reduce using rule 63 (arg_list)


state 100

   31 selection_stmt: IF '(' expression ')' statement .
   32               | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 102

    ELSE      [reduce using rule 31 (selection_stmt)]
    $default  reduce using rule 31 (selection_stmt)


state 101

   33 iteration_stmt: WHILE '(' expression ')' statement .

    $default  reduce using rule 33 (iteration_stmt)


state 102

   32 selection_stmt: IF '(' expression ')' statement ELSE . statement

    NUM     shift, and go to state 38
    ID      shift, and go to state 39
    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    ';'     shift, and go to state 43
    '('     shift, and go to state 44
    '{'     shift, and go to state 28

    compound_stmt        go to state 46
    statement            go to state 103
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


state 103

   32 selection_stmt: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 32 (selection_stmt)
